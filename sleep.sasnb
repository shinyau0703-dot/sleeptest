[{"kind":2,"language":"sas","value":"/*一鍵復原+煙霧測試*/\r\nods results on;ods select all;ods exclude none;ods _all_ close;ods html5(id=vscode) style=HTMLBlue options(bitmap_mode='inline' svg_mode='inline');ods graphics on;options notes;\r\ndata _ping;length ping $2;ping=\"OK\";run;\r\ntitle \"煙霧測試\";proc print data=_ping noobs;run;title;","outputs":[]},{"kind":2,"language":"sas","value":"/* 讀檔 → RAW */\r\nfilename raw filesrvc folderpath=\"/Public/Sandy/sleep_test\" filename=\"sleepdata1.csv\";\r\nproc import datafile=raw out=work.raw dbms=csv replace; getnames=yes; guessingrows=max; run;\r\n\r\n/* 取樣前：筆數 + 數值遺失 */\r\nproc sql; create table _n_pre as select count(*) as Nobs format=comma12. from work.raw; quit;\r\ntitle \"取樣前｜資料筆數\"; proc print data=_n_pre noobs; run; title;\r\nods output Summary=_numMiss_pre;\r\nproc means data=work.raw n nmiss stackodsoutput; var _numeric_; run;\r\ntitle \"取樣前｜數值欄位遺失（N/NMISS）\"; proc print data=_numMiss_pre noobs label; label Variable='變數' N='筆數' NMiss='遺失'; run; title;\r\n\r\n/* 擴充到 20,000 → RAW_BIG */\r\nproc surveyselect data=work.raw method=urs sampsize=2000000 outhits seed=1234 out=work.raw_big_tmp; run;\r\ndata work.raw_big; set work.raw_big_tmp; RowID=_N_; drop NumberHits SamplingWeight SelectionProb; run;\r\nproc datasets lib=work nolist; delete raw_big_tmp; quit;\r\n\r\n/* 取樣後：筆數 + 數值遺失 */\r\nproc sql; create table _n_post as select count(*) as Nobs format=comma12. from work.raw_big; quit;\r\ntitle \"取樣後｜資料筆數\"; proc print data=_n_post noobs; run; title;\r\nods output Summary=_numMiss_post;\r\nproc means data=work.raw_big n nmiss stackodsoutput; var _numeric_; run;\r\ntitle \"取樣後｜數值欄位遺失（N/NMISS）\"; proc print data=_numMiss_post noobs label; label Variable='變數' N='筆數' NMiss='遺失'; run; title;\r\n\r\n/* 引擎/主機相依資訊（RAW_BIG） */\r\nods select EngineHost;\r\ntitle \"引擎/主機相依資訊（RAW_BIG）\"; proc contents data=work.raw_big; run; title;\r\nods select all;\r\n","outputs":[]},{"kind":2,"language":"sas","value":"/* Step 2：用 DataMaker 產出的 RAW_BIG 進行清理與特徵衍生，產出 CLEAN */\r\n\r\n/* 1) 讀取擴充後資料，若有 fold 欄位就一起丟掉（不存在也不影響） */\r\ndata work.clean_base;\r\n  set work.raw_big;\r\n  drop fold;\r\nrun;\r\n\r\n/* 2) 以「中位數」補 Sleep_Duration、Quality_of_Sleep 的缺值 */\r\nproc stdize data=work.clean_base reponly method=median out=work.clean_base2;\r\n  var Sleep_Duration Quality_of_Sleep;\r\nrun;\r\n\r\n/* 3) 依血壓衍生 BP_Abnormal（Systolic≥130 或 Diastolic≥85 → 'Yes'；缺值→空白） */\r\ndata work.clean;\r\n  set work.clean_base2;\r\n  length BP_Abnormal $3;\r\n  if missing(Systolic) or missing(Diastolic) then BP_Abnormal='';\r\n  else if Systolic>=130 or Diastolic>=85 then BP_Abnormal='Yes';\r\n  else BP_Abnormal='No';\r\nrun;\r\n\r\n/* 4) 簡要檢查 */\r\nproc sql; create table _n2 as select count(*) as Nobs format=comma12. from work.clean; quit;\r\ntitle \"Step 2｜處理後筆數\"; proc print data=_n2 noobs; run; title;\r\n\r\ntitle \"Step 2｜前 5 列（CLEAN）\"; proc print data=work.clean(obs=5) noobs; run; title;\r\n","outputs":[]},{"kind":2,"language":"sas","value":"/* Step 3：探索性分析（以 WORK.CLEAN 為輸入） */\r\n\r\n/* 數值欄位描述統計*/\r\ntitle \"Step 3｜數值統計總覽\";\r\nproc means data=work.clean n mean std min p25 median p75 max maxdec=2;\r\n  var _numeric_;\r\nrun; title;\r\n\r\n/* 目標分布 */\r\ntitle \"Step 3｜Sleep_Disorder 分布\";\r\nproc freq data=work.clean;\r\n  tables Sleep_Disorder / nocum nopercent;\r\nrun; title;\r\n\r\n/* 長條圖 */\r\ntitle \"Step 3｜Sleep_Disorder 長條圖\";\r\nproc sgplot data=work.clean;\r\n  vbar Sleep_Disorder / datalabel;\r\nrun; title;\r\n\r\n/* 直方圖（依 Sleep_Disorder 分組） */\r\ntitle \"Step 3｜Sleep_Duration 直方圖（依 Sleep_Disorder 分組）\";\r\nproc sgplot data=work.clean;\r\n  histogram Sleep_Duration / transparency=0.3 group=Sleep_Disorder;\r\n  density   Sleep_Duration / type=kernel group=Sleep_Disorder;\r\nrun; title;\r\n\r\n/* 盒鬚圖 */\r\ntitle \"Step 3｜Sleep_Duration 盒鬚圖\";\r\nproc sgplot data=work.clean;\r\n  vbox Sleep_Duration / category=Sleep_Disorder;\r\nrun; title;\r\n\r\n/* 列聯表 */\r\ntitle \"Step 3｜Gender × Sleep_Disorder（列聯表）\";\r\nproc freq data=work.clean;\r\n  tables Gender*Sleep_Disorder / norow nocol nopercent;\r\nrun; title;\r\n","outputs":[]},{"kind":2,"language":"sas","value":"/* Step 4：分層切分 Train/Test（以 WORK.CLEAN 為輸入） */\r\n\r\n/* 1) 依目標變數分層，隨機抽 80% 當 Train，其餘 Test */\r\nproc sort data=work.clean out=work.clean_s; by Sleep_Disorder; run;\r\n\r\nproc surveyselect data=work.clean_s out=work.split\r\n                  method=srs samprate=0.8 outall seed=1234;\r\n  strata Sleep_Disorder;\r\nrun;\r\n\r\ndata work.train work.test;\r\n  set work.split;\r\n  if Selected then output work.train; else output work.test;\r\nrun;\r\n\r\n/* 2) 確認 Train/Test 筆數 */\r\ntitle \"Step 4｜Train / Test 筆數\";\r\nproc sql;\r\n  select 'train' as ds, count(*) as Nobs format=comma12. from work.train\r\n  union all\r\n  select 'test'  as ds, count(*) as Nobs format=comma12. from work.test;\r\nquit; title;\r\n\r\n/* 3) 兩組的 Sleep_Disorder 分布 */\r\ntitle \"Step 4｜Train 分布\";\r\nproc freq data=work.train;\r\n  tables Sleep_Disorder / nocum nopercent;\r\nrun; title;\r\n\r\ntitle \"Step 4｜Test 分布\";\r\nproc freq data=work.test;\r\n  tables Sleep_Disorder / nocum nopercent;\r\nrun; title;\r\n","outputs":[]},{"kind":2,"language":"sas","value":"/* 建議：開啟計時資訊（看 log 用，不影響表格計時） */\r\noptions stimer fullstimer;\r\n\r\n/* 可調：maxdepth / leafsize / 是否剪枝（OFF 或 COST） */\r\n%macro dt_once(maxdepth=4, leafsize=15, prune=OFF, out=work.dt_time, replace=Y);\r\n\r\n  /* 變數清單 */\r\n  %local CLASS_VARS NUM_VARS scorefile t1 t2 s1 s2 u1 u2 train_ms score_train_ms score_test_ms;\r\n  %let CLASS_VARS=Gender Occupation BMI_Category Sleep_Disorder;\r\n  %let NUM_VARS  =Sleep_Duration Quality_of_Sleep Physical_Activity_Level Stress_Level\r\n                  Systolic Diastolic Heart_Rate Daily_Steps Age;\r\n\r\n  %let scorefile=%sysfunc(pathname(work))/tree_score.sas;\r\n\r\n  /* 1) 訓練（毫秒） */\r\n  %let t1=%sysfunc(datetime());\r\n  proc hpsplit data=work.train seed=1234 maxdepth=&maxdepth leafsize=&leafsize;\r\n    class &CLASS_VARS;\r\n    model Sleep_Disorder = Gender Occupation BMI_Category &NUM_VARS;\r\n    grow gini;\r\n    %if %upcase(&prune)=COST %then %do;\r\n      prune costcomplexity;\r\n    %end;  /* 若為 OFF 就完全不剪枝 */\r\n    code file=\"&scorefile\";\r\n  run;\r\n  %let t2=%sysfunc(datetime());\r\n  %let train_ms=%sysfunc(round(%sysevalf((&t2-&t1)*1000),1));\r\n\r\n  /* 2) 打分（Train/Test；毫秒） */\r\n  %let s1=%sysfunc(datetime());\r\n  data work._sc_train; set work.train; %include \"&scorefile\"; run;\r\n  %let s2=%sysfunc(datetime());\r\n  %let score_train_ms=%sysfunc(round(%sysevalf((&s2-&s1)*1000),1));\r\n\r\n  %let u1=%sysfunc(datetime());\r\n  data work._sc_test; set work.test; %include \"&scorefile\"; run;\r\n  %let u2=%sysfunc(datetime());\r\n  %let score_test_ms=%sysfunc(round(%sysevalf((&u2-&u1)*1000),1));\r\n\r\n  /* 3) 若無 I_Sleep_Disorder，就用機率決標籤 */\r\n  %macro _ensure_label(ds);\r\n    data &ds;\r\n      set &ds;\r\n      length I_Sleep_Disorder $12;\r\n      array p{3} P_Sleep_DisorderInsomnia P_Sleep_DisorderNormal P_Sleep_DisorderSleep_Apnea;\r\n      array lbl{3} $12 _temporary_ ('Insomnia','Normal','Sleep Apnea');\r\n      maxp=.; idx=.;\r\n      do _i=1 to 3;\r\n        if not missing(p{_i}) then\r\n          if missing(maxp) or p{_i}>maxp then do; maxp=p{_i}; idx=_i; end;\r\n      end;\r\n      if nmiss(of p{*})<3 and idx>0 then I_Sleep_Disorder=lbl{idx};\r\n      drop _i maxp idx;\r\n    run;\r\n  %mend;\r\n  %_ensure_label(work._sc_train)\r\n  %_ensure_label(work._sc_test)\r\n\r\n  /* 4) 準確率 */\r\n  %local acc_train acc_test;\r\n  proc sql noprint;\r\n    select mean(upcase(strip(Sleep_Disorder))=upcase(strip(I_Sleep_Disorder)))\r\n      into :acc_train\r\n    from work._sc_train;\r\n    select mean(upcase(strip(Sleep_Disorder))=upcase(strip(I_Sleep_Disorder)))\r\n      into :acc_test\r\n    from work._sc_test;\r\n  quit;\r\n\r\n  /* 5) 寫出結果（預設覆蓋；replace=N 則 append） */\r\n  %if %upcase(&replace)=Y or ^%sysfunc(exist(&out)) %then %do;\r\n    proc datasets lib=%scan(&out,1,.) nolist; delete %scan(&out,2,.); quit;\r\n    data &out;\r\n      length Model $20 Prune $8;\r\n      Model='Decision Tree';\r\n      Prune=\"&prune\";\r\n      MaxDepth=&maxdepth; LeafSize=&leafsize;\r\n      TrainMS=&train_ms; ScoreTrainMS=&score_train_ms; ScoreTestMS=&score_test_ms;\r\n      TrainAcc=&acc_train; TestAcc=&acc_test;\r\n      format TrainMS Score: comma12. TrainAcc TestAcc percent8.2;\r\n    run;\r\n  %end;\r\n  %else %do;\r\n    data _one;\r\n      length Model $20 Prune $8;\r\n      Model='Decision Tree';\r\n      Prune=\"&prune\";\r\n      MaxDepth=&maxdepth; LeafSize=&leafsize;\r\n      TrainMS=&train_ms; ScoreTrainMS=&score_train_ms; ScoreTestMS=&score_test_ms;\r\n      TrainAcc=&acc_train; TestAcc=&acc_test;\r\n      format TrainMS Score: comma12. TrainAcc TestAcc percent8.2;\r\n    run;\r\n    proc append base=&out data=_one force; run; quit;\r\n    proc datasets lib=work nolist; delete _one; quit;\r\n  %end;\r\n\r\n  proc datasets lib=work nolist; delete _sc_train _sc_test; quit;\r\n%mend;\r\n\r\n/* 範例：取消剪枝 */\r\n%dt_once(maxdepth=8, leafsize=5,  prune=OFF);           /* 覆蓋輸出表 */\r\n%dt_once(maxdepth=12, leafsize=3, prune=OFF, replace=N); /* 累加到同一張表 */\r\n\r\n/* 範例：恢復剪枝（比較用） */\r\n/* %dt_once(maxdepth=8, leafsize=5,  prune=COST, replace=N); */\r\n","outputs":[]},{"kind":2,"language":"sas","value":"/*呼叫*/\r\n%dt_once(maxdepth=1,leafsize=1,prune=OFF); \r\n%dt_once(maxdepth=2,leafsize=2,prune=OFF,replace=N);\r\n%dt_once(maxdepth=3,leafsize=3,prune=OFF,replace=N);\r\n%dt_once(maxdepth=4,leafsize=5,prune=OFF,replace=N);\r\n%dt_once(maxdepth=6,leafsize=7,prune=OFF,replace=N);\r\n%dt_once(maxdepth=8,leafsize=10,prune=OFF,replace=N);\r\n%dt_once(maxdepth=10,leafsize=15,prune=OFF,replace=N);\r\n%dt_once(maxdepth=12,leafsize=20,prune=OFF,replace=N);\r\n%dt_once(maxdepth=15,leafsize=30,prune=OFF,replace=N);\r\n%dt_once(maxdepth=20,leafsize=50,prune=OFF,replace=N);\r\n%dt_once(maxdepth=25,leafsize=75,prune=OFF,replace=N);\r\n%dt_once(maxdepth=30,leafsize=100,prune=OFF,replace=N);\r\n%dt_once(maxdepth=40,leafsize=150,prune=OFF,replace=N);\r\n%dt_once(maxdepth=50,leafsize=200,prune=OFF,replace=N);\r\n%dt_once(maxdepth=75,leafsize=300,prune=OFF,replace=N);\r\n%dt_once(maxdepth=100,leafsize=500,prune=OFF,replace=N);\r\n%dt_once(maxdepth=150,leafsize=50,prune=OFF,replace=N);\r\n%dt_once(maxdepth=200,leafsize=5,prune=OFF,replace=N);\r\n%dt_once(maxdepth=300,leafsize=2,prune=OFF,replace=N);\r\n%dt_once(maxdepth=500,leafsize=1,prune=OFF,replace=N);\r\n\r\ntitle \"決策樹—時間（毫秒）與準確率（累計結果）\";\r\nproc print data=work.dt_time noobs; run; title;","outputs":[]},{"kind":2,"language":"sas","value":"%dt_once(maxdepth=40,leafsize=150,prune=OFF,replace=N);\r\ntitle \"決策樹—時間（毫秒）與準確率（累計結果）\";\r\nproc print data=work.dt_time noobs; run; title;","outputs":[]}]